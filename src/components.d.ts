/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { VariableGroup, VariableType } from "./components/theme/variables";
export namespace Components {
    interface BlazeSite {
    }
    interface ComponentsAlerts {
    }
    interface ComponentsAutocomplete {
    }
    interface ComponentsAvatars {
    }
    interface ComponentsBadges {
    }
    interface ComponentsButtons {
    }
    interface ComponentsCalendars {
    }
    interface ComponentsCards {
    }
    interface ComponentsDivider {
    }
    interface ComponentsFileUpload {
    }
    interface ComponentsInputs {
    }
    interface ComponentsMenus {
    }
    interface ComponentsPagination {
    }
    interface ComponentsProgress {
    }
    interface ComponentsRanges {
    }
    interface ComponentsTables {
    }
    interface ComponentsTabs {
    }
    interface ComponentsTimelines {
    }
    interface ComponentsToggles {
    }
    interface ComponentsTooltips {
    }
    interface ComponentsTrees {
    }
    interface ComponentsTypography {
    }
    interface HomePage {
    }
    interface ObjectsModals {
    }
    interface PageNotFound {
    }
    interface SiteHeader {
    }
    interface SiteName {
    }
    interface SiteNav {
        "close": () => Promise<void>;
        "show": () => Promise<void>;
    }
    interface ThemeInput {
        "type"?: VariableType;
        "value": string;
    }
    interface ThemePanel {
        "variables": VariableGroup[];
    }
    interface UtilsColors {
    }
}
export interface ThemeInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLThemeInputElement;
}
declare global {
    interface HTMLBlazeSiteElement extends Components.BlazeSite, HTMLStencilElement {
    }
    var HTMLBlazeSiteElement: {
        prototype: HTMLBlazeSiteElement;
        new (): HTMLBlazeSiteElement;
    };
    interface HTMLComponentsAlertsElement extends Components.ComponentsAlerts, HTMLStencilElement {
    }
    var HTMLComponentsAlertsElement: {
        prototype: HTMLComponentsAlertsElement;
        new (): HTMLComponentsAlertsElement;
    };
    interface HTMLComponentsAutocompleteElement extends Components.ComponentsAutocomplete, HTMLStencilElement {
    }
    var HTMLComponentsAutocompleteElement: {
        prototype: HTMLComponentsAutocompleteElement;
        new (): HTMLComponentsAutocompleteElement;
    };
    interface HTMLComponentsAvatarsElement extends Components.ComponentsAvatars, HTMLStencilElement {
    }
    var HTMLComponentsAvatarsElement: {
        prototype: HTMLComponentsAvatarsElement;
        new (): HTMLComponentsAvatarsElement;
    };
    interface HTMLComponentsBadgesElement extends Components.ComponentsBadges, HTMLStencilElement {
    }
    var HTMLComponentsBadgesElement: {
        prototype: HTMLComponentsBadgesElement;
        new (): HTMLComponentsBadgesElement;
    };
    interface HTMLComponentsButtonsElement extends Components.ComponentsButtons, HTMLStencilElement {
    }
    var HTMLComponentsButtonsElement: {
        prototype: HTMLComponentsButtonsElement;
        new (): HTMLComponentsButtonsElement;
    };
    interface HTMLComponentsCalendarsElement extends Components.ComponentsCalendars, HTMLStencilElement {
    }
    var HTMLComponentsCalendarsElement: {
        prototype: HTMLComponentsCalendarsElement;
        new (): HTMLComponentsCalendarsElement;
    };
    interface HTMLComponentsCardsElement extends Components.ComponentsCards, HTMLStencilElement {
    }
    var HTMLComponentsCardsElement: {
        prototype: HTMLComponentsCardsElement;
        new (): HTMLComponentsCardsElement;
    };
    interface HTMLComponentsDividerElement extends Components.ComponentsDivider, HTMLStencilElement {
    }
    var HTMLComponentsDividerElement: {
        prototype: HTMLComponentsDividerElement;
        new (): HTMLComponentsDividerElement;
    };
    interface HTMLComponentsFileUploadElement extends Components.ComponentsFileUpload, HTMLStencilElement {
    }
    var HTMLComponentsFileUploadElement: {
        prototype: HTMLComponentsFileUploadElement;
        new (): HTMLComponentsFileUploadElement;
    };
    interface HTMLComponentsInputsElement extends Components.ComponentsInputs, HTMLStencilElement {
    }
    var HTMLComponentsInputsElement: {
        prototype: HTMLComponentsInputsElement;
        new (): HTMLComponentsInputsElement;
    };
    interface HTMLComponentsMenusElement extends Components.ComponentsMenus, HTMLStencilElement {
    }
    var HTMLComponentsMenusElement: {
        prototype: HTMLComponentsMenusElement;
        new (): HTMLComponentsMenusElement;
    };
    interface HTMLComponentsPaginationElement extends Components.ComponentsPagination, HTMLStencilElement {
    }
    var HTMLComponentsPaginationElement: {
        prototype: HTMLComponentsPaginationElement;
        new (): HTMLComponentsPaginationElement;
    };
    interface HTMLComponentsProgressElement extends Components.ComponentsProgress, HTMLStencilElement {
    }
    var HTMLComponentsProgressElement: {
        prototype: HTMLComponentsProgressElement;
        new (): HTMLComponentsProgressElement;
    };
    interface HTMLComponentsRangesElement extends Components.ComponentsRanges, HTMLStencilElement {
    }
    var HTMLComponentsRangesElement: {
        prototype: HTMLComponentsRangesElement;
        new (): HTMLComponentsRangesElement;
    };
    interface HTMLComponentsTablesElement extends Components.ComponentsTables, HTMLStencilElement {
    }
    var HTMLComponentsTablesElement: {
        prototype: HTMLComponentsTablesElement;
        new (): HTMLComponentsTablesElement;
    };
    interface HTMLComponentsTabsElement extends Components.ComponentsTabs, HTMLStencilElement {
    }
    var HTMLComponentsTabsElement: {
        prototype: HTMLComponentsTabsElement;
        new (): HTMLComponentsTabsElement;
    };
    interface HTMLComponentsTimelinesElement extends Components.ComponentsTimelines, HTMLStencilElement {
    }
    var HTMLComponentsTimelinesElement: {
        prototype: HTMLComponentsTimelinesElement;
        new (): HTMLComponentsTimelinesElement;
    };
    interface HTMLComponentsTogglesElement extends Components.ComponentsToggles, HTMLStencilElement {
    }
    var HTMLComponentsTogglesElement: {
        prototype: HTMLComponentsTogglesElement;
        new (): HTMLComponentsTogglesElement;
    };
    interface HTMLComponentsTooltipsElement extends Components.ComponentsTooltips, HTMLStencilElement {
    }
    var HTMLComponentsTooltipsElement: {
        prototype: HTMLComponentsTooltipsElement;
        new (): HTMLComponentsTooltipsElement;
    };
    interface HTMLComponentsTreesElement extends Components.ComponentsTrees, HTMLStencilElement {
    }
    var HTMLComponentsTreesElement: {
        prototype: HTMLComponentsTreesElement;
        new (): HTMLComponentsTreesElement;
    };
    interface HTMLComponentsTypographyElement extends Components.ComponentsTypography, HTMLStencilElement {
    }
    var HTMLComponentsTypographyElement: {
        prototype: HTMLComponentsTypographyElement;
        new (): HTMLComponentsTypographyElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLObjectsModalsElement extends Components.ObjectsModals, HTMLStencilElement {
    }
    var HTMLObjectsModalsElement: {
        prototype: HTMLObjectsModalsElement;
        new (): HTMLObjectsModalsElement;
    };
    interface HTMLPageNotFoundElement extends Components.PageNotFound, HTMLStencilElement {
    }
    var HTMLPageNotFoundElement: {
        prototype: HTMLPageNotFoundElement;
        new (): HTMLPageNotFoundElement;
    };
    interface HTMLSiteHeaderElement extends Components.SiteHeader, HTMLStencilElement {
    }
    var HTMLSiteHeaderElement: {
        prototype: HTMLSiteHeaderElement;
        new (): HTMLSiteHeaderElement;
    };
    interface HTMLSiteNameElement extends Components.SiteName, HTMLStencilElement {
    }
    var HTMLSiteNameElement: {
        prototype: HTMLSiteNameElement;
        new (): HTMLSiteNameElement;
    };
    interface HTMLSiteNavElement extends Components.SiteNav, HTMLStencilElement {
    }
    var HTMLSiteNavElement: {
        prototype: HTMLSiteNavElement;
        new (): HTMLSiteNavElement;
    };
    interface HTMLThemeInputElement extends Components.ThemeInput, HTMLStencilElement {
    }
    var HTMLThemeInputElement: {
        prototype: HTMLThemeInputElement;
        new (): HTMLThemeInputElement;
    };
    interface HTMLThemePanelElement extends Components.ThemePanel, HTMLStencilElement {
    }
    var HTMLThemePanelElement: {
        prototype: HTMLThemePanelElement;
        new (): HTMLThemePanelElement;
    };
    interface HTMLUtilsColorsElement extends Components.UtilsColors, HTMLStencilElement {
    }
    var HTMLUtilsColorsElement: {
        prototype: HTMLUtilsColorsElement;
        new (): HTMLUtilsColorsElement;
    };
    interface HTMLElementTagNameMap {
        "blaze-site": HTMLBlazeSiteElement;
        "components-alerts": HTMLComponentsAlertsElement;
        "components-autocomplete": HTMLComponentsAutocompleteElement;
        "components-avatars": HTMLComponentsAvatarsElement;
        "components-badges": HTMLComponentsBadgesElement;
        "components-buttons": HTMLComponentsButtonsElement;
        "components-calendars": HTMLComponentsCalendarsElement;
        "components-cards": HTMLComponentsCardsElement;
        "components-divider": HTMLComponentsDividerElement;
        "components-file-upload": HTMLComponentsFileUploadElement;
        "components-inputs": HTMLComponentsInputsElement;
        "components-menus": HTMLComponentsMenusElement;
        "components-pagination": HTMLComponentsPaginationElement;
        "components-progress": HTMLComponentsProgressElement;
        "components-ranges": HTMLComponentsRangesElement;
        "components-tables": HTMLComponentsTablesElement;
        "components-tabs": HTMLComponentsTabsElement;
        "components-timelines": HTMLComponentsTimelinesElement;
        "components-toggles": HTMLComponentsTogglesElement;
        "components-tooltips": HTMLComponentsTooltipsElement;
        "components-trees": HTMLComponentsTreesElement;
        "components-typography": HTMLComponentsTypographyElement;
        "home-page": HTMLHomePageElement;
        "objects-modals": HTMLObjectsModalsElement;
        "page-not-found": HTMLPageNotFoundElement;
        "site-header": HTMLSiteHeaderElement;
        "site-name": HTMLSiteNameElement;
        "site-nav": HTMLSiteNavElement;
        "theme-input": HTMLThemeInputElement;
        "theme-panel": HTMLThemePanelElement;
        "utils-colors": HTMLUtilsColorsElement;
    }
}
declare namespace LocalJSX {
    interface BlazeSite {
    }
    interface ComponentsAlerts {
    }
    interface ComponentsAutocomplete {
    }
    interface ComponentsAvatars {
    }
    interface ComponentsBadges {
    }
    interface ComponentsButtons {
    }
    interface ComponentsCalendars {
    }
    interface ComponentsCards {
    }
    interface ComponentsDivider {
    }
    interface ComponentsFileUpload {
    }
    interface ComponentsInputs {
    }
    interface ComponentsMenus {
    }
    interface ComponentsPagination {
    }
    interface ComponentsProgress {
    }
    interface ComponentsRanges {
    }
    interface ComponentsTables {
    }
    interface ComponentsTabs {
    }
    interface ComponentsTimelines {
    }
    interface ComponentsToggles {
    }
    interface ComponentsTooltips {
    }
    interface ComponentsTrees {
    }
    interface ComponentsTypography {
    }
    interface HomePage {
    }
    interface ObjectsModals {
    }
    interface PageNotFound {
    }
    interface SiteHeader {
    }
    interface SiteName {
    }
    interface SiteNav {
    }
    interface ThemeInput {
        "onValueChange"?: (event: ThemeInputCustomEvent<string>) => void;
        "type"?: VariableType;
        "value"?: string;
    }
    interface ThemePanel {
        "variables"?: VariableGroup[];
    }
    interface UtilsColors {
    }
    interface IntrinsicElements {
        "blaze-site": BlazeSite;
        "components-alerts": ComponentsAlerts;
        "components-autocomplete": ComponentsAutocomplete;
        "components-avatars": ComponentsAvatars;
        "components-badges": ComponentsBadges;
        "components-buttons": ComponentsButtons;
        "components-calendars": ComponentsCalendars;
        "components-cards": ComponentsCards;
        "components-divider": ComponentsDivider;
        "components-file-upload": ComponentsFileUpload;
        "components-inputs": ComponentsInputs;
        "components-menus": ComponentsMenus;
        "components-pagination": ComponentsPagination;
        "components-progress": ComponentsProgress;
        "components-ranges": ComponentsRanges;
        "components-tables": ComponentsTables;
        "components-tabs": ComponentsTabs;
        "components-timelines": ComponentsTimelines;
        "components-toggles": ComponentsToggles;
        "components-tooltips": ComponentsTooltips;
        "components-trees": ComponentsTrees;
        "components-typography": ComponentsTypography;
        "home-page": HomePage;
        "objects-modals": ObjectsModals;
        "page-not-found": PageNotFound;
        "site-header": SiteHeader;
        "site-name": SiteName;
        "site-nav": SiteNav;
        "theme-input": ThemeInput;
        "theme-panel": ThemePanel;
        "utils-colors": UtilsColors;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "blaze-site": LocalJSX.BlazeSite & JSXBase.HTMLAttributes<HTMLBlazeSiteElement>;
            "components-alerts": LocalJSX.ComponentsAlerts & JSXBase.HTMLAttributes<HTMLComponentsAlertsElement>;
            "components-autocomplete": LocalJSX.ComponentsAutocomplete & JSXBase.HTMLAttributes<HTMLComponentsAutocompleteElement>;
            "components-avatars": LocalJSX.ComponentsAvatars & JSXBase.HTMLAttributes<HTMLComponentsAvatarsElement>;
            "components-badges": LocalJSX.ComponentsBadges & JSXBase.HTMLAttributes<HTMLComponentsBadgesElement>;
            "components-buttons": LocalJSX.ComponentsButtons & JSXBase.HTMLAttributes<HTMLComponentsButtonsElement>;
            "components-calendars": LocalJSX.ComponentsCalendars & JSXBase.HTMLAttributes<HTMLComponentsCalendarsElement>;
            "components-cards": LocalJSX.ComponentsCards & JSXBase.HTMLAttributes<HTMLComponentsCardsElement>;
            "components-divider": LocalJSX.ComponentsDivider & JSXBase.HTMLAttributes<HTMLComponentsDividerElement>;
            "components-file-upload": LocalJSX.ComponentsFileUpload & JSXBase.HTMLAttributes<HTMLComponentsFileUploadElement>;
            "components-inputs": LocalJSX.ComponentsInputs & JSXBase.HTMLAttributes<HTMLComponentsInputsElement>;
            "components-menus": LocalJSX.ComponentsMenus & JSXBase.HTMLAttributes<HTMLComponentsMenusElement>;
            "components-pagination": LocalJSX.ComponentsPagination & JSXBase.HTMLAttributes<HTMLComponentsPaginationElement>;
            "components-progress": LocalJSX.ComponentsProgress & JSXBase.HTMLAttributes<HTMLComponentsProgressElement>;
            "components-ranges": LocalJSX.ComponentsRanges & JSXBase.HTMLAttributes<HTMLComponentsRangesElement>;
            "components-tables": LocalJSX.ComponentsTables & JSXBase.HTMLAttributes<HTMLComponentsTablesElement>;
            "components-tabs": LocalJSX.ComponentsTabs & JSXBase.HTMLAttributes<HTMLComponentsTabsElement>;
            "components-timelines": LocalJSX.ComponentsTimelines & JSXBase.HTMLAttributes<HTMLComponentsTimelinesElement>;
            "components-toggles": LocalJSX.ComponentsToggles & JSXBase.HTMLAttributes<HTMLComponentsTogglesElement>;
            "components-tooltips": LocalJSX.ComponentsTooltips & JSXBase.HTMLAttributes<HTMLComponentsTooltipsElement>;
            "components-trees": LocalJSX.ComponentsTrees & JSXBase.HTMLAttributes<HTMLComponentsTreesElement>;
            "components-typography": LocalJSX.ComponentsTypography & JSXBase.HTMLAttributes<HTMLComponentsTypographyElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "objects-modals": LocalJSX.ObjectsModals & JSXBase.HTMLAttributes<HTMLObjectsModalsElement>;
            "page-not-found": LocalJSX.PageNotFound & JSXBase.HTMLAttributes<HTMLPageNotFoundElement>;
            "site-header": LocalJSX.SiteHeader & JSXBase.HTMLAttributes<HTMLSiteHeaderElement>;
            "site-name": LocalJSX.SiteName & JSXBase.HTMLAttributes<HTMLSiteNameElement>;
            "site-nav": LocalJSX.SiteNav & JSXBase.HTMLAttributes<HTMLSiteNavElement>;
            "theme-input": LocalJSX.ThemeInput & JSXBase.HTMLAttributes<HTMLThemeInputElement>;
            "theme-panel": LocalJSX.ThemePanel & JSXBase.HTMLAttributes<HTMLThemePanelElement>;
            "utils-colors": LocalJSX.UtilsColors & JSXBase.HTMLAttributes<HTMLUtilsColorsElement>;
        }
    }
}
